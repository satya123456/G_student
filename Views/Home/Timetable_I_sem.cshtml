@model IEnumerable<Gstudent.Models.Students>
<style>
    .table td{
        padding:12px 15px;
    }
    .table tr th {
        background-color: #b4ffe3;
        padding: 10px;
    }
    .table tr:nth-child(even) {
        background: #f1fff9;
    }
    </style>
<section class="content-container contentContainer">
    <div class="d-flex justify-content-between">
        <h5 class="page-title">Time table</h5>
        <div class="back">
            <a href="javascript:void(0);" onclick="location.reload();">
                <i class='bx bx-arrow-back'></i>
            </a>
        </div>
    </div>
   
    <div class="box-inner">
        <div id="dataTable" class="table-responsive tbl-style">

        </div>
    </div>


    <h3 class="sub-title">
        Registered courses
    </h3>
    <div class="box-inner">
        @if (Model.Count() > 0)
        {
            <div class="table-responsive">
                <table class="table table-bordered">
                    <thead>
                        <tr>
                            <th>Course code</th>
                            <th>Course name</th>
                            <th>Building / Room no</th>
                            <th>Credits</th>
                            <th>Type</th>
                            <th>Category</th>
                            <th>Faculty ID</th>
                            <th>Faculty name</th>

                            @*<th>Room no</th>*@

                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var val in Model)
                        {
                            <tr>
                                <td>@val.SUBJECT_CODE</td>
                                <td>@val.SUBJECT_NAME</td>
                                @if (val.building_name == null || val.room_no == null)
                                {
                                    <td>@val.building_name  @val.room_no</td>
                                }
                                else
                                {
                                    <td>@val.building_name / @val.room_no</td>
                                }

                                <td>@val.CREDITS</td>
                                <td>@val.SUBJECT_TYPE</td>
                                <td>@val.CBCS_CATEGORY</td>
                                <td>@val.empid</td>
                                <td>@val.empname</td>

                                @*<td></td>*@


                            </tr>
                        }

                    </tbody>
                </table>
            </div>

        }
        else
        {
            <div class="">
                <h6 class="text-center">Time table yet to be published</h6>
            </div>
        }
    </div>
</section>

<script>

    $(document).ready(function () {
        GetNewTimetable();

    });



    function GetNewTimetable() {


        $.ajax({
            type: 'GET',
            url: './Home/GetNewTimetable',
            data: {

            },
            contentType: "application/x-www-form-urlencoded; charset=utf-8",
            dataType: "json",
            success: function (result) {
                //debugger;
                console.log(result);
               // $("#dataTable").html(result);


                let jsonData = JSON.parse(result);
                let container = document.getElementById("dataTable");

                // Create the table element
                let table = document.createElement("table");

                // Get the keys (column names) of the first object in the JSON data
                let cols = Object.keys(jsonData[0]);

                // Create the header element
                let thead = document.createElement("thead");
                let tr = document.createElement("tr");

                // Loop through the column names and create header cells
                cols.forEach((item) => {
                    let th = document.createElement("th");
                    th.innerText = item; // Set the column name as the text of the header cell
                    tr.appendChild(th); // Append the header cell to the header row
                });
                thead.appendChild(tr); // Append the header row to the header
                table.append(tr) // Append the header to the table

                // Loop through the JSON data and create table rows
                jsonData.forEach((item) => {
                    let tr = document.createElement("tr");

                    // Get the values of the current object in the JSON data
                    let vals = Object.values(item);

                    // Loop through the values and create table cells
                    vals.forEach((elem) => {
                        let td = document.createElement("td");
                        td.innerText = elem; // Set the value as the text of the table cell
                        tr.appendChild(td); // Append the table cell to the table row
                    });
                    table.appendChild(tr); // Append the table row to the table
                });
                container.appendChild(table) // Append the table to the container element
                $('#dataTable table').addClass('table table-bordered');
            }
        });
    }
</script>